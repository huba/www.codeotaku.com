<entry>
	<p>To connect from the client to the server without using a password, you need to generate a key on the client. This key is then installed into the server's <code>authorized_keys</code> file, and then the client can connect without standard password authentication.</p>
	
	<p>On the client as the user who will run <code>ssh</code> to the remote host:</p>
	
	<listing src="ssh-keygen.txt" lang="bash" />
	
	<p>Once you have done this, you need to append it to the <code>authorized_keys</code> file for the user you will be logging in as on the remote server:</p>
	
	<listing src="ssh-keygen-append.txt" lang="bash" />
	
	<p>N.B. Replace <code>[remote-user]</code> and <code>[remote-host]</code> with appropriate values. You might need to change it to <code>~/.ssh/authorized_keys2</code> depending on your sshd config file, which can be found in <code>/etc/ssh/sshd_config</code> on the server. Check for the <code>AuthorizedKeysFile</code> config parameter.</p>
	
	<h2>SSH Multiplexing</h2>
	
	<p>SSH can allow multiple virtual connections via the same single network connection. This is called SSH multiplexing, and can make it faster to connect to a server after establishing the initial connection.</p>
	
	<p>Add the following into <code>~/.ssh/config</code> or <code>/etc/ssh/ssh_config</code>:</p>
	
	<listing src="ssh-multiplex-config.txt" />
	
	<p>This will create a socket for each set (user, machine, port) when the first SSH session is opened. Further sessions will see the socket and use it instead of opening a new connection, multiplexing all concurrent connections via the same connection. The same goes for SCP and SFTP.</p>
	
	<p>Nice side-effects of this:</p>
	
	<ul>
		<li>No functionality is lost at all.</li>
		<li>SSH sessions will open faster, as there is no need to establish a connection.</li>
		<li>You will not need to enter you password everytime (but note that maybe you should be using public-key authentication).</li>
		<li>You can open several sessions to servers which put a limit on the number of simultaneous connections.</li>
		<li>If you are a sysadmin, you can limit the number of SSH connections to exactly one per user.</li>
	</ul>
	
	<h2>Further Information</h2>
	
	<p>OpenSSH is a fantastic tool and every system administrator should learn how to use it. There are many resources out there, but here are some which I think is great:</p>
	
	<ul>
		<li><a href="http://www.securityfocus.com/infocus/1806">Information about SSH and Security</a></li>
		<li><a href="http://blogs.igalia.com/aperez/?p=8">Faster remote shell with multiplexed SSH</a></li>
	</ul>
</entry>
<content:entry>
	<p>Recently I have had the pleasure to use <a href="http://antoniocangiano.com/2008/01/08/ramaze-a-ruby-framework-that-will-amaze/">Ramaze</a>. It is an interesting new framework which has introduced me to Rack, another framework which seems very powerful.</p>

	<p>Ramaze is built on top of another framework called Innate. Here is the documentation:</p>

	<ul>
		<li><a href="http://book.ramaze.net/">Ramaze Book "Journey to Ramaze"</a></li>
		<li><a href="http://doc.rubyists.com/ramaze/">Ramaze RDOC</a> (See the ''README.md'' file for a good description)</li>
		<li><a href="http://doc.rubyists.com/ramaze+innate/">Innate RDOC</a> (See the ''README_INNATE.md'' file for a good description)</li>
	</ul>

	<p>My first project was creating a web interface for managing an email server. The email server runs Exim4 and Dovecot, and uses MySQL for account information. I've made some command line scripts using ActiveRecord, but I thought it would be interesting to try Ramaze with <a href="http://datamapper.org/docs/">DataMapper</a> (<a href="http://rdoc.info/projects/datamapper/dm-core">RDOC</a>).</p>

	<p>I am currently using <a href="http://www.modrails.com/">Phusion Passenger</a> to deploy the majority of my applications. Phusion Passenger supports Rack applications which makes it a great tool for deploying both legacy Rails apps and modern Rack apps on the same infrastructure (Apache).</p>

	<p>Going forward, I've found another interesting framework called <a href="http://docs.heroku.com/heroku">heroku</a> which promises to make deployment easier. While (re)deployment difficulty typically scales based on dependencies and internal changes, Passenger has certainly made the task easy. I look forward to trying heroku.</p>

	<p>On another note, heroku has some <a href="http://docs.heroku.com/rack">great examples</a> of ''config.ru'' files. I found it quite hard to figure out what to put initially. Once you have the general idea, it is easy.. but this page provides examples for many different web frameworks which I found gave me a better understanding of Rack and what it provides. Here is another useful <a href="http://wiki.github.com/rack/rack/tutorial-rackup-howto">Rackup Tutorial</a>.</p>
</content:entry>
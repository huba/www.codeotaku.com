<page>
	<heading>jQuery.Syntax 高级配置</heading>
	
	<p>jQuery.Syntax 有很多高级的特性, 但它也已经被设计得非常易用了. 默认的配置方式中提供有包装工具来高亮<code class="syntax html">&lt;code class="syntax brush-{language}"&gt;</code> 和<code class="syntax html">&lt;pre class="syntax brush-{language}"&gt;</code> 标签. 当然, 还有很多更加有用的额外配置和特性.</p>
	
	<h2 id="SyntaxHighlightingOptions">语法高亮配置</h2>
	
	<p>此类配置用于高亮某些特殊的元素:</p>
	
	<listing src="specific_element.txt" brush="javascript" />
	
	<dl class="options">
		<dt>brush</dt>
		<dd>代码刷(应用高亮)的名称. 与类名<code class="syntax">brush-{language}</code> 不同,而是语言类<code class="syntax">{language}</code>的确切子名.默认为 <code class="syntax">plain</code>.</dd>
		<dt>tabWidth</dt>
		<dd>缩进长度.默认为4.</dd>
		<dt>layout</dt>
		<dd>用于应用一组HTML元素.默认为<code class="syntax">plain</code>. 别在简化函数上使用此配置(可用 <code class="syntax">blockLayout</code> 和 <code class="syntax">inlineLayout</code>).</dd>
		<dt>linkify</dt>
		<dd>将 <code class="syntax">href</code> 转换成可单击的连接.</dd>
		<dt>replace</dt>
		<dd>为true是将使用被高亮的元素来替换您指定的容器. 一般情况下您都会这么做的,除非您想高亮某些内容后将结果应用到别处,例如,假设您想高亮 <code class="syntax html">&lt;script type="text/javascript"&gt;</code>标签后将结果插入到页面里.</dd>
	</dl>
	
	<h2 id="UpdatingTheCache">更新缓存</h2>
	
	<p>jQuery.Syntax是动态加载所需的全部资源的.它使用一个缓存文件来简化这个过程. 为了更新这个缓存文件, 您可以手动设置也可以使用自动配置文件 <code class="syntax">rakefile</code>.</p>
	
	<dl>
		<dt><code class="syntax bash-script">rake update_aliases</code></dt>
		<dd>通过指定的别名和样式文件重新生成缓存.</dd>
		<dt><code class="syntax bash-script">rake generate_stylesheets</code></dt>
		<dd>[需要 <a href="http://sass-lang.com/">Sass</a>]通过指定的主题生成样式文件后再更新缓存.</dd>
	</dl>
	
	<h2 id="CreatingYourOwnTheme">定制您自己的主题</h2>
	
	<p>在<code class="syntax">themes</code> 目录下新建您自己的子目录. 然后按此格式 <code class="syntax">jquery.syntax.{resource-type}.{name}.sass</code>.创建文件名. 例如:</p>
	
	<ul>
		<li><code class="syntax">themes/my_theme/jquery.syntax.brush.apache.sass</code></li>
		<li><code class="syntax">themes/my_theme/jquery.syntax.layout.table.sass</code></li>
	</ul>
	
	<p>这些都准备好之后, 仅需运行以下命令(注意,此命令<strong>将删除掉</strong> 当前存在的所有样式文件!):</p>
	
	<listing brush="bash">$ rake generate_stylesheets[my_theme]</listing>
	
	<p>... 之后新的样式会随着缓存文件自动生成好.</p>
	
	<h2 id="CreatingYourOwnLayout">定制您自己的布局</h2>
	
	<p>布局是在jQuery.Syntax的主目录下使用文件名格式为 <code class="syntax">jquery.syntax.layout.{name}.js</code>来指定的. 默认为: <code class="syntax">table</code> 和 <code class="syntax">inline</code>. 这些名称可以用作 <code class="syntax">layout</code> 的参数(和简化函数, <code class="syntax">blockLayout</code> 和 <code class="syntax">inlineLayout</code>).</p>
	
	<p>一个布局实质是将一组元素按您配置参数中指定的排列方式来显示. <code class="syntax">table</code>布局通过构建一个<code class="syntax html">&lt;table&gt;</code> 来按行存放这组元素. <code class="syntax">inline</code> 布局则构建一个inline <code class="syntax html">&lt;code&gt;</code> 元素.</p>
	
	<p>当然也可以使用样式文件来定制布局, 按格式 <code class="syntax">jquery.syntax.layout.{name}.sass</code> 在相应的 <code class="syntax">theme</code> 目录下新建样式文件.</p>
	
	<p>这些都准备好之后, 即可使用您的主题来配置了:</p>
	
	<listing src="custom_layout.txt" brush="html" />
	
	<p>您可以参考jQuery.Syntax的 <a href="../../layouts">示例布局</a>.</p>
	
	<h2 id="CreatingYourOwnBrush">定制您自己的代码刷</h2>
	
	<p>代码刷是通过文件名格式为 <code class="syntax">jquery.syntax.brush.{name}.js</code>来指定的. 与布局相同, 也使用文件名对应格式为 <code class="syntax">theme/../jquery.syntax.brush.{name}.sass</code>的样式文件.</p>
	
	<p>建议您参考以下的代码刷编写方式,然后再自行配置.</p>
	
	<listing src="new_brush.txt" brush="javascript" />
	
	<p>您必须在新增代码刷后更新缓存,否则将无法正常显示.</p>
	
	<h2>高亮特定元素</h2>
	
	<p>jQuery.Syntax 为上述配置提供基类函数 <code class="syntax javascript">jQuery.syntax(...)</code> , 实际上是另一个函数 <code class="syntax javascript">jQuery.fn.syntax(...)</code>的二次封装.此函数是标准 <code class="syntax javascript">jQuery</code> 方法, 可用于高亮特定的元素.</p>
	
	<listing src="elements.txt" brush="javascript" />
		
	<h2 id="ZeroLoadScript">无脚本化</h2>
	
	<p>有些页面可能并不需要语法高亮,但每次还得载入 jQuery.Syntax 脚本吗?您当然要可以通过如下jQuery 脚本在仅需要高亮的页面加载 jQuery.Syntax.</p>
	
	<listing src="zero_load.txt" brush="javascript" />
</page>
// brush: "new_brush" aliases: ["nb"]

//	This file is part of the "jQuery.Syntax" project, and is licensed under the GNU AGPLv3.
//	Copyright 2010 Samuel Williams. All rights reserved.
//	See <jquery.syntax.js> for licensing details.

Syntax.register('my_brush', function(brush) {
	brush.push(['(', ')'], {klass: 'operator'});
	
	brush.push({
		// All regular expressions must be global.
		pattern: /0x[0-9a-fA-F]+/g,
		// klass is used as a tag for the particular element being highlighted.
		klass: 'constant'
	});
	
	brush.push({
		pattern: /; .*$/gm,
		klass: 'comment',
		// This states that within the string matched, only elements of klass href can exist within.
		allow: ['href']
		
		// ... You can also specify several other things
		// allow: '*' -> allow all klasses to be children of this match
		// disallow: ['...'] -> allow all klasses except the listed ones to be children of this match
		// only: ['...'] -> this child match can only exist within the given parent klass
	});
	
	// Syntax.lib.doubleQuotedString = {pattern: /"([^\\"\n]|\\.)*"/g, klass: 'string'};
	brush.push(Syntax.lib.doubleQuotedString);
	
	// Syntax.lib.stringEscape = {pattern: /\\./g, klass: 'escape', only: ['string']};
	brush.push(Syntax.lib.stringEscape);
	
	// Syntax.lib.webLink = {pattern: /\w+:\/\/[\w\-.\/?%&=@:;#]*/g, klass: 'href'};
	brush.push(Syntax.lib.webLink);
});


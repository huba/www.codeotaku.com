<content:contents-page title="Synco Documentation">
	<content:heading>Concepts</content:heading>
	
	<p>Synco has several important concepts which are used to structure the backup script: <b>servers</b>, <b>directories</b>, the <b>master</b>, and the <b>method</b>. Each of these objects has associated <b>event handlers</b>.</p>
	
	<div class="gallery"><img src="script-structure.png" /></div>
	
	<h3>Servers</h3>
	
	<p>A server object represents a specific host system and a specific root directory within that system. A host system can have a host name specified explicitly, or it can simply refer to the localhost (default). A server also has a root directory, in which all related operations will be performed in.</p>
	
	<p>It is possible to have two server objects that refer to the same host, but have different root directories. In this case, you would be copying data from one location on a server to another.</p>
	
	<h3>Directories</h3>
	
	<p>A directory object specifies a relative path where data resides on a server. The path is resolved for a particular server by mapping the directory into the given server's root path.</p>
	
	<h3>Method</h3>
	
	<p>A method specifies the way data is copied between servers and directories. As an example, Synco includes two methods <code class="syntax ruby">RSync</code> which provides data synchronisation and <code class="syntax ruby">RSyncSnapshot</code> which provides incremental backups.</p>
	
	<p>Typically, methods also have directionality associated with them:</p>
	
	<dl class="options">
		<dt>Push</dt>
		<dd>Data is pushed by the master server to the backup server.</dd>
		<dt>Pull</dt>
		<dd>Data is pulled by the backup server from the master server.</dd>
	</dl>
	
	<p>Directionality has implications for both security and performance.</p>
	
	<p>In terms of security, the non-controlling server must provide open access to the controlling server, typically via SSH; in the case of a push backup, the backup server itself may be open to attack, and in the case of a pull backup, the master server may be vulnerable.</p>
	
	<p>Depending on the network setup, performance may be improved or degraded by a particular direction. This is because if multiple backup servers are trying to access the same resource at once, the available capacity might be saturated; on the other hand, if there are multiple backup servers with individual (slow) network links, it may be more efficient to run them all at the same time.</p>
	
	<h3>Master</h3>
	
	<p>A backup script represents a single backup processes that can be executed from any machine. The actual work done is based on the master specified in the script. The master specifies the primary source of information in any backup or synchronisation task.</p>
	
	<p>The master server can either be explicitly specified by using its symbolic name in the backup script, or resolved by matching a host name to a specific server instance.</p>
	
	<p>In a homogeneous network of synchronized servers, this means that slaves will replicate from a master. If the master is failed, another slave can pick up the slack by promoting it to master.</p>
</content:contents-page>
DefaultSyntaxBrushes = [
	['ActionScript3', 'shBrushAS3', ['as3', 'actionscript3']],
	['Bash/shell', 'shBrushBash', ['bash', 'shell']],
	['C#', 'shBrushCSharp', ['c-sharp', 'csharp']],
	['C++', 'shBrushCpp', ['c++', 'cpp', 'c']],
	['CSS', 'shBrushCss', ['css']],
	['Delphi', 'shBrushDelphi', ['delphi', 'pas', 'pascal']],
	['Diff', 'shBrushDiff', ['diff', 'patch']],
	['Groovy', 'shBrushGroovy', ['groovy']],
	['JavaScript', 'shBrushJScript', ['js', 'jscript', 'javascript']],
	['Java', 'shBrushJava', ['java']],
	['JavaFX', 'shBrushJavaFX', ['jfx', 'javafx']],
	['Perl', 'shBrushPerl', ['perl', 'pl']],
	['PHP', 'shBrushPhp', ['php']],
	['Plain Text', 'shBrushPlain', ['plain', 'text']],
	['PowerShell', 'shBrushPowerShell', ['ps', 'powershell']],
	['Python', 'shBrushPython', ['py', 'python']],
	['Ruby', 'shBrushRuby', ['rails', 'ror', 'ruby']],
	['Scala', 'shBrushScala', ['scala']],
	['SQL', 'shBrushSql', ['sql']],
	['Visual Basic', 'shBrushVb', ['vb', 'vbnet']],
	['XML', 'shBrushXml', ['xml', 'xhtml', 'xslt', 'html']],
	['X86 ASM', 'shBrushX86ASM', ['x86-asm']],
	['AppleScript', 'shBrushAppleScript', ['applescript']]
];

function loadCSS (path) {
	$("head").append("<link>");
	css = $("head").children(":last");
	
	css.attr({
		rel: "stylesheet",
		type: "text/css",
		href: path
	});
}

function setupSyntaxHighlighter (settings) {
	var scriptLoader = new ScriptLoader();
	
	var alias_list = {};
	var core_loaded = false;
	
	$("pre").each(function(pre) {
		var match = this.className.match(/brush: (.+?)(;|$)/);
		if (match)
			alias_list[match[1]] = true;
	});
	
	for (i in DefaultSyntaxBrushes) {
		var brush = DefaultSyntaxBrushes[i];
		var load = false;
		
		for (j in brush[2]) {
			if (alias_list[brush[2][j]])
				load = true;
		}
		
		if (load) {
			if (!core_loaded) {
				scriptLoader.load(settings['root'] + 'shCore.js');
				loadCSS(settings['root'] + 'shCore.css');
				
				for (k in settings['stylesheets']) {
					loadCSS(settings['root'] + settings['stylesheets'][k]);
				}
				core_loaded = true;
			}
			
			scriptLoader.load(settings['root'] + brush[1] + '.js');
		}
	}
	
	if (core_loaded) {
		scriptLoader.onFinish(function() {
			SyntaxHighlighter.highlight();
		});
	}
}